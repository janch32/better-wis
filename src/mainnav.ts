import * as utils  from './utils';
interface UserInfo{
	/** Login u≈æivatele (xlogin00) */
	login?: string;
	/** Cel√© jm√©no vƒçetnƒõ titul≈Ø */
	name?: string;
	/** Aktu√°lnƒõ vybran√© studium */
	study?: string;
	/** Aktu√°ln√≠ roƒçn√≠k studia */
	year?: string;
}

interface MenuItem{
	location: string;
	nameCs: string;
	nameEn: string;
	section: utils.PageSections;
}

const menuItems: MenuItem[] = [
	{
		location: "/FIT/st/index.php",
		nameCs: "P≈ôehled",
		nameEn: "Overview",
		section: utils.PageSections.Home
	},
	{
		location: "/FIT/st/study-s.php",
		nameCs: "Studia",
		nameEn: "Study",
		section: utils.PageSections.Study
	},
	{
		location: "/FIT/st/study-v.php",
		nameCs: "P≈ôedmƒõty",
		nameEn: "Courses",
		section: utils.PageSections.Courses
	},
	{
		location: "/FIT/st/course-reg.php",
		nameCs: "Registrace",
		nameEn: "Registration",
		section: utils.PageSections.Registration
	},
	{
		location: "/FIT/st/other.php",
		nameCs: "Ostatn√≠",
		nameEn: "Other",
		section: utils.PageSections.Other
	},
];

/**
 * Vlastn√≠ hlavn√≠ navigace WISu (ta horn√≠)
 */
export const mainNav = () => {
	const user = getUserInfo();
	const nav = createCustomNav(user);
	document.body.prepend(nav);
	console.log(user);
};

function createCustomNav(userData: UserInfo): HTMLElement{
	const lang = utils.getLang();
	const currentSection = utils.getCurrentSection();
	const nav = document.createElement("nav");
	nav.className = "main-nav";

	// P≈ôid√°n√≠ loga
	const logo = document.createElement("a");
	logo.href = "https://fit.vut.cz/."+lang;
	logo.className = "logo";
	logo.title = "Hlavn√≠ web VUT FIT";
	nav.appendChild(logo);

	// P≈ôid√°n√≠ navigaƒçn√≠ch polo≈æek na hlavn√≠ sekce
	for (const item of menuItems) {
		const link = document.createElement("a");
		link.href = `${item.location}.${lang}`;
		link.textContent = lang === "en" ? item.nameEn : item.nameCs;
		if(currentSection === item.section) link.className = "active";
		nav.appendChild(link);
	}

	// P≈ôid√°n√≠ informac√≠ o p≈ôihl√°≈°en√©m u≈æivateli
	const user = document.createElement("a");
	user.href = "/FIT/st/osinfo.php." + lang;
	user.className = "user";
	user.innerHTML = `
		<div class="name">${userData.name}</div>
		<div class="login">${userData.login}</div>
		<div class="more-btn"></div>
		`;
	nav.appendChild(user);

	// Vysouvac√≠ roleta
	const more = document.createElement("div");
	more.className = "more";
	more.innerHTML = `
	<div class="study">${userData.study}</div>
	<div class="year">${userData.year}</div>
	<a target="_blank" href="https://github.com/janch32/better-wis">Better WIS - Zpƒõtn√° vazba</a>
	<a target="_blank" href="https://www.vutbr.cz/studis/student.phtml?sn=prohlaseni_studenta">Studis - Prohl√°≈°en√≠ o bezinfekƒçnosti</a>
	<div class="buttons">
		<a class="lang" href="${window.location.href.replace(/\.en|\.cs/, "."+(lang === "en" ? "cs" : "en"))}">${(lang === "en" ? "CS" : "EN")}</a>
		<a class="account" href="/FIT/st/osinfo.php.${lang}">${lang === "en" ? "Accounts" : "√öƒçty"}</a>
		<a class="logout" href="/FIT/st/logoff.php.${lang}?logoff=1">${lang === "en" ? "Logout" : "Odhl√°sit"}</a>
	</div>
	`;
	nav.appendChild(more);

	return nav;
}

/**
 * Z√≠skat info o u≈æivateli ze str√°nky
 *
 * √ödaje jsou klasicky na zaƒç√°tku str√°nky hned pod navigac√≠.
 * Bohu≈æel je to ne≈°≈•astnƒõ jen jako text (nen√≠ to v elementu), tak≈æe je dolov√°n√≠
 * tƒõchto dat trochu tƒõ≈æ≈°√≠. Ale co se d√° dƒõlat ü§∑‚Äç‚ôÄÔ∏è
 *
 * TODO cachovat, aby se data zobrazili i p≈ôes to, ≈æe na str√°nce chyb√≠.
 * (chyb√≠ nap≈ô√≠klad na str√°nce https://wis.fit.vutbr.cz/FIT/st/email-l.php.cs)
 */
function getUserInfo(): UserInfo {
	const user: UserInfo = {};
	const main = document.querySelector("body > div[role=main]");
	if(!main) return user;

	const children = main.childNodes;
	if(children.length < 5) return user;

	const loginNode = children[0];
	if(loginNode.nodeType === Node.TEXT_NODE){
		const login = loginNode.textContent?.match(/Login ([^,]*),/);
		if(login && login.length > 1) user.login = login[1];
	}

	if(user.login) loginNode.remove();
	else return user;

	const nameNode = children[0];
	if(nameNode.nodeName === "B"){
		user.name = nameNode.textContent ?? undefined;
	}else return user;

	if(user.name) nameNode.remove();
	else return user;

	const studyNode = children[0];
	if(studyNode.nodeType === Node.TEXT_NODE){
		user.study = studyNode.textContent?.substring(2);
	}else return user;

	if(user.study) studyNode.remove();
	else return user;

	const yearNode = children[1];
	if(yearNode.nodeType === Node.TEXT_NODE){
		const year = yearNode.textContent?.match(/(.*?)( - )?$/);
		if(year && year.length > 1) user.year = year[1];
	}

	if(user.year) yearNode.remove();
	return user;
}
